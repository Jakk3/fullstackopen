{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Button.js","components/Persons.js","components/Notification.js","services/PersonsService.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","addName","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","filterName","handleFilterChange","Button","text","handleClick","onClick","Persons","namesToShow","deletePerson","map","person","key","name","number","id","Notification","message","success","className","url","newPerson","axios","post","then","response","data","get","delete","put","App","useState","persons","setPersons","useEffect","PersonsService","setNamesToShow","setNewName","setNewNumber","setFilterName","notificationMessage","setNotificationMessage","setSuccess","createNotification","notificationHide","setTimeout","event","target","filter","toLowerCase","includes","preventDefault","nameExists","personIndex","i","length","window","confirm","updatedPerson","tempPersons","p","catch","error","concat","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6d8198a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={props.addName}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleNameChange} /><br />\r\n          number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({ filterName, handleFilterChange }) => {\r\n  return (\r\n    <div>\r\n      filter by name <input value={filterName} onChange={handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Button = ({ text, handleClick }) => (\r\n  <button onClick={handleClick}>{text}</button>\r\n)\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Persons = ({ namesToShow, deletePerson }) => {\r\n  return (\r\n    <ul>\r\n      {namesToShow.map(person => <li key={person.name}>{person.name} - {person.number} <Button text='Delete' handleClick={deletePerson(person.id, person.name)} /></li>)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\nimport \"./Notification.css\"\r\n\r\nconst Notification = ({ message, success }) => {\r\n  if (message === null) {\r\n    return (null)\r\n  }\r\n  return (\r\n    <div className={success ? 'success' : 'error'}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst url = '/api/persons/'\r\n\r\nconst add = newPerson => {\r\n  const req = axios.post(url, newPerson)\r\n  return req.then(response => response.data)\r\n}\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(url)\r\n  return req.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n  return axios.delete(url + id)\r\n}\r\n\r\nconst update = (id, person) => {\r\n  const req = axios.put(url + id, person)\r\n  return req.then(response => response.data)\r\n}\r\n\r\nexport default { add, getAll, del, update }","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport PersonsService from './services/PersonsService'\r\n\r\nconst App = () => {\r\n\r\n  const [persons, setPersons] = useState([])\r\n  useEffect(() => {\r\n    PersonsService.getAll()\r\n      .then(response => {\r\n        setPersons(response)\r\n        setNamesToShow(response)\r\n      })\r\n  }, [])\r\n\r\n\r\n\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filterName, setFilterName] = useState('')\r\n  const [namesToShow, setNamesToShow] = useState(persons)\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    let nameExists = false\r\n    let personIndex = null\r\n    for (let i = 0; i < persons.length; i++) {\r\n      if (newName === persons[i].name) {\r\n        nameExists = true\r\n        personIndex = i\r\n        i = persons.length\r\n      }\r\n    }\r\n\r\n    // UPDATE PERSON\r\n    if (nameExists) {\r\n      if (window.confirm((`${newName} already exists, update phone number?`))) {\r\n        const updatedPerson = { name: newName, number: newNumber }\r\n        PersonsService.update(persons[personIndex].id, updatedPerson)\r\n          .then(response => {\r\n            const tempPersons = persons.map(p => p.id !== persons[personIndex].id ? p : response)\r\n            setPersons(tempPersons)\r\n            setNamesToShow(tempPersons)\r\n            setFilterName('')\r\n            createNotification('Updated ' + persons[personIndex].name, true)\r\n          })\r\n          .catch(error => {\r\n            createNotification('Information of ' + persons[personIndex].name + 'has already been removed from the server', false)\r\n          })\r\n\r\n      }\r\n      // CREATE NEW PERSON\r\n    } else {\r\n      const newPerson = { name: newName, number: newNumber }\r\n      setPersons(persons.concat(newPerson))\r\n      setNewName('')\r\n      setNewNumber('')\r\n      setNamesToShow(persons.concat(newPerson))\r\n      PersonsService.add(newPerson)\r\n      createNotification('Added ' + newPerson.name, true)\r\n    }\r\n  }\r\n\r\n  const createNotification = (message, success) => {\r\n    setNotificationMessage(message)\r\n    setSuccess(success)\r\n    notificationHide()\r\n  }\r\n\r\n  const notificationHide = () => {\r\n    setTimeout(() => setNotificationMessage(null), 3000);\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilterName(event.target.value)\r\n    setNamesToShow(persons.filter(person => person.name.toLowerCase().includes(event.target.value.toLowerCase())))\r\n  }\r\n\r\n  const deletePerson = (id, name) => e => {\r\n    if (window.confirm('Delete ' + name)) {\r\n      PersonsService.del(id)\r\n        .then(response => {\r\n          const tempPersons = persons.filter(p => p.id !== id)\r\n          setPersons(tempPersons)\r\n          setFilterName('')\r\n          setNamesToShow(tempPersons)\r\n          createNotification(name + ' has been deleted from the server', true)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} success={success} />\r\n      <Filter filterName={filterName} handleFilterChange={handleFilterChange} />\r\n\r\n      <h2>add a new contact</h2>\r\n      <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <Persons namesToShow={namesToShow} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}